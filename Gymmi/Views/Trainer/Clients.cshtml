@model List<HoiVien>
@{
    ViewData["Title"] = "Danh Sách Học Viên";
    Layout = "~/Views/Shared/_TrainerLayout.cshtml";
}

<!-- Page Header -->
<div class="bg-gray-800 rounded-xl p-6 shadow-xl border border-gray-700 mb-8">
    <div class="flex items-center justify-between">
        <div>
            <h1 class="text-3xl font-bold text-white mb-2">
                <i class="fas fa-users mr-3 text-orange-400"></i>
                Danh Sách Học Viên
            </h1>
            <p class="text-gray-400">Xem và quản lý thông tin học viên</p>
        </div>
        <div class="hidden md:block">
            <i class="fas fa-user-friends text-6xl text-orange-200 opacity-30"></i>
        </div>
    </div>
</div>

<!-- Error Message -->
@if (ViewBag.Error != null)
{
    <div class="bg-red-500 bg-opacity-10 border border-red-500 text-red-400 px-6 py-4 rounded-lg mb-6">
        <div class="flex items-center">
            <i class="fas fa-exclamation-circle mr-3"></i>
            <span>@ViewBag.Error</span>
        </div>
    </div>
}

@if (Model != null && Model.Any())
{
    <!-- Statistics Summary -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <div class="bg-gray-800 rounded-xl p-6 shadow-xl border border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-400 text-sm">Tổng Học Viên</p>
                    <p class="text-2xl font-bold text-white">@Model.Count</p>
                </div>
                <div class="p-3 bg-orange-500 rounded-full">
                    <i class="fas fa-users text-white text-xl"></i>
                </div>
            </div>
        </div>
        
        <div class="bg-gray-800 rounded-xl p-6 shadow-xl border border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-400 text-sm">Đang Hoạt Động</p>
                    <p class="text-2xl font-bold text-green-400">@Model.Count(m => m.TrangThai == "Hoạt động")</p>
                </div>
                <div class="p-3 bg-green-500 rounded-full">
                    <i class="fas fa-check-circle text-white text-xl"></i>
                </div>
            </div>
        </div>
        
        <div class="bg-gray-800 rounded-xl p-6 shadow-xl border border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-400 text-sm">Nam</p>
                    <p class="text-2xl font-bold text-blue-400">@Model.Count(m => m.GioiTinh == "Nam")</p>
                </div>
                <div class="p-3 bg-blue-500 rounded-full">
                    <i class="fas fa-mars text-white text-xl"></i>
                </div>
            </div>
        </div>
        
        <div class="bg-gray-800 rounded-xl p-6 shadow-xl border border-gray-700">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-400 text-sm">Nữ</p>
                    <p class="text-2xl font-bold text-pink-400">@Model.Count(m => m.GioiTinh == "Nữ")</p>
                </div>
                <div class="p-3 bg-pink-500 rounded-full">
                    <i class="fas fa-venus text-white text-xl"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter -->
    <div class="bg-gray-800 rounded-xl p-6 shadow-xl border border-gray-700 mb-8">
        <div class="flex flex-col md:flex-row items-center justify-between space-y-4 md:space-y-0 md:space-x-4">
            <div class="flex-1 w-full md:w-auto">
                <div class="relative">
                    <input type="text" id="searchInput" placeholder="Tìm kiếm học viên..." 
                           class="w-full px-4 py-3 pl-10 bg-gray-700 border border-gray-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent transition-all duration-300">
                    <i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
                </div>
            </div>
            <div class="flex space-x-2">
                <button class="px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors" onclick="filterByStatus('all')">
                    Tất cả
                </button>
                <button class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors" onclick="filterByStatus('active')">
                    Hoạt động
                </button>
                <button class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors" onclick="filterByGender('Nam')">
                    Nam
                </button>
                <button class="px-4 py-2 bg-pink-600 text-white rounded-lg hover:bg-pink-700 transition-colors" onclick="filterByGender('Nữ')">
                    Nữ
                </button>
            </div>
        </div>
    </div>

    <!-- Members Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="membersGrid">
        @foreach (var member in Model.OrderBy(m => m.HoTen))
        {
            <div class="member-card bg-gray-800 rounded-xl p-6 shadow-xl border border-gray-700 hover:border-orange-500 transition-all duration-300 transform hover:scale-105" 
                 data-name="@member.HoTen.ToLower()" 
                 data-status="@member.TrangThai.ToLower()" 
                 data-gender="@member.GioiTinh">
                
                <!-- Member Avatar -->
                <div class="text-center mb-4">
                    <div class="w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-3
                        @(member.GioiTinh == "Nam" ? "bg-gradient-to-r from-blue-500 to-blue-600" : "bg-gradient-to-r from-pink-500 to-pink-600")">
                        <i class="fas fa-@(member.GioiTinh == "Nam" ? "mars" : "venus") text-2xl text-white"></i>
                    </div>
                    <h3 class="text-lg font-bold text-white">@member.HoTen</h3>
                    <p class="text-gray-400 text-sm">@member.User?.Email</p>
                </div>

                <!-- Member Info -->
                <div class="space-y-3">
                    <div class="flex items-center justify-between">
                        <span class="text-gray-400 text-sm">Trạng thái:</span>
                        <span class="px-2 py-1 rounded-full text-xs font-semibold
                            @(member.TrangThai == "Hoạt động" ? "bg-green-500 text-white" : "bg-gray-500 text-white")">
                            @member.TrangThai
                        </span>
                    </div>
                    <div class="flex items-center justify-between">
                        <span class="text-gray-400 text-sm">Giới tính:</span>
                        <span class="text-white text-sm">@member.GioiTinh</span>
                    </div>
                    <div class="flex items-center justify-between">
                        <span class="text-gray-400 text-sm">Ngày sinh:</span>
                        <span class="text-white text-sm">@member.NgaySinh.ToString("dd/MM/yyyy")</span>
                    </div>
                    <div class="flex items-center justify-between">
                        <span class="text-gray-400 text-sm">Số ĐT:</span>
                        <span class="text-white text-sm">@member.Sdt</span>
                    </div>
                </div>

                <!-- Additional Info -->
                <div class="mt-4 pt-4 border-t border-gray-600">
                    <div class="flex items-center justify-between text-sm">
                        <span class="text-gray-400">Tham gia:</span>
                        <span class="text-orange-400">@member.NgayDangKy.ToString("dd/MM/yyyy")</span>
                    </div>
                    @if (!string.IsNullOrEmpty(member.DiaChi))
                    {
                        <div class="mt-2">
                            <p class="text-gray-400 text-xs">Địa chỉ:</p>
                            <p class="text-white text-sm truncate">@member.DiaChi</p>
                        </div>
                    }
                </div>

                <!-- Contact Actions -->
                <div class="mt-4 flex space-x-2">
                    @if (!string.IsNullOrEmpty(member.Sdt))
                    {
                        <a href="tel:@member.Sdt" 
                           class="flex-1 px-3 py-2 bg-green-600 text-white text-center rounded-lg hover:bg-green-700 transition-colors text-sm">
                            <i class="fas fa-phone mr-1"></i>
                            Gọi
                        </a>
                    }
                    @if (!string.IsNullOrEmpty(member.User?.Email))
                    {
                        <a href="mailto:@member.User.Email" 
                           class="flex-1 px-3 py-2 bg-blue-600 text-white text-center rounded-lg hover:bg-blue-700 transition-colors text-sm">
                            <i class="fas fa-envelope mr-1"></i>
                            Email
                        </a>
                    }
                </div>
            </div>
        }
    </div>

    <!-- Quick Actions -->
    <div class="mt-8 grid grid-cols-1 md:grid-cols-3 gap-6">
        <a href="@Url.Action("Dashboard", "Trainer")" 
           class="bg-gradient-to-r from-orange-600 to-red-600 rounded-xl p-6 text-white text-center hover:from-orange-700 hover:to-red-700 transition-all transform hover:scale-105 shadow-xl">
            <i class="fas fa-tachometer-alt text-3xl mb-3"></i>
            <h3 class="text-lg font-bold">Về Trang Chủ</h3>
            <p class="text-sm text-orange-100">Quay về dashboard</p>
        </a>
        
        <a href="@Url.Action("Schedule", "Trainer")" 
           class="bg-gradient-to-r from-blue-600 to-purple-600 rounded-xl p-6 text-white text-center hover:from-blue-700 hover:to-purple-700 transition-all transform hover:scale-105 shadow-xl">
            <i class="fas fa-calendar-alt text-3xl mb-3"></i>
            <h3 class="text-lg font-bold">Lịch Làm Việc</h3>
            <p class="text-sm text-blue-100">Xem lịch làm việc</p>
        </a>
        
        <a href="@Url.Action("Profile", "Trainer")" 
           class="bg-gradient-to-r from-green-600 to-teal-600 rounded-xl p-6 text-white text-center hover:from-green-700 hover:to-teal-700 transition-all transform hover:scale-105 shadow-xl">
            <i class="fas fa-user text-3xl mb-3"></i>
            <h3 class="text-lg font-bold">Hồ Sơ</h3>
            <p class="text-sm text-green-100">Cập nhật thông tin</p>
        </a>
    </div>
}
else
{
    <!-- No Members -->
    <div class="bg-gray-800 rounded-xl p-12 shadow-xl border border-gray-700 text-center">
        <i class="fas fa-users text-6xl text-gray-500 mb-6"></i>
        <h2 class="text-2xl font-bold text-white mb-4">Chưa Có Học Viên</h2>
        <p class="text-gray-400 mb-8">Hiện tại chưa có học viên nào trong hệ thống hoặc bạn chưa được phân công.</p>
        
        <a href="@Url.Action("Dashboard", "Trainer")" 
           class="inline-flex items-center bg-gradient-to-r from-orange-600 to-red-600 text-white px-8 py-3 rounded-lg hover:from-orange-700 hover:to-red-700 transition-all transform hover:scale-105 shadow-lg">
            <i class="fas fa-arrow-left mr-2"></i>
            Về Trang Chủ
        </a>
    </div>
}

<script>
// Search functionality
document.getElementById('searchInput').addEventListener('input', function() {
    const searchTerm = this.value.toLowerCase();
    const members = document.querySelectorAll('.member-card');
    
    members.forEach(member => {
        const name = member.dataset.name;
        if (name.includes(searchTerm)) {
            member.style.display = 'block';
        } else {
            member.style.display = 'none';
        }
    });
});

// Filter by status
function filterByStatus(status) {
    const members = document.querySelectorAll('.member-card');
    
    members.forEach(member => {
        const memberStatus = member.dataset.status;
        
        if (status === 'all' || memberStatus === status) {
            member.style.display = 'block';
        } else {
            member.style.display = 'none';
        }
    });
}

// Filter by gender
function filterByGender(gender) {
    const members = document.querySelectorAll('.member-card');
    
    members.forEach(member => {
        const memberGender = member.dataset.gender;
        
        if (memberGender === gender) {
            member.style.display = 'block';
        } else {
            member.style.display = 'none';
        }
    });
}
</script>

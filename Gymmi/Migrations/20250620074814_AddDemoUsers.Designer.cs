// <auto-generated />
using System;
using Gymmi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gymmi.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250620074814_AddDemoUsers")]
    partial class AddDemoUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Gymmi.Models.BaoCao", b =>
                {
                    b.Property<int>("ID_BaoCao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_BaoCao"));

                    b.Property<int>("ID_User")
                        .HasColumnType("int");

                    b.Property<string>("LoaiBaoCao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("TenBaoCao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID_BaoCao");

                    b.HasIndex("ID_User");

                    b.ToTable("BaoCaos");
                });

            modelBuilder.Entity("Gymmi.Models.CaLamViec", b =>
                {
                    b.Property<int>("ID_Ca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Ca"));

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenCa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_Ca");

                    b.ToTable("CaLamViecs");

                    b.HasData(
                        new
                        {
                            ID_Ca = 1,
                            MoTa = "6:00 - 14:00",
                            TenCa = "Ca sáng"
                        },
                        new
                        {
                            ID_Ca = 2,
                            MoTa = "14:00 - 22:00",
                            TenCa = "Ca chiều"
                        },
                        new
                        {
                            ID_Ca = 3,
                            MoTa = "18:00 - 02:00",
                            TenCa = "Ca tối"
                        });
                });

            modelBuilder.Entity("Gymmi.Models.GoiTap", b =>
                {
                    b.Property<int>("ID_GoiTap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_GoiTap"));

                    b.Property<decimal>("GiaTien")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoaiGoiTap")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoNgay")
                        .HasColumnType("int");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID_GoiTap");

                    b.ToTable("GoiTaps");
                });

            modelBuilder.Entity("Gymmi.Models.HoaDon_ThanhLy", b =>
                {
                    b.Property<int>("ID_HoaDonThanhLy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_HoaDonThanhLy"));

                    b.Property<int>("ID_ThietBi")
                        .HasColumnType("int");

                    b.Property<int>("ID_User")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThanhLy")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoTien")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID_HoaDonThanhLy");

                    b.HasIndex("ID_ThietBi");

                    b.HasIndex("ID_User");

                    b.ToTable("HoaDon_ThanhLys");
                });

            modelBuilder.Entity("Gymmi.Models.HoaDon_ThanhToan", b =>
                {
                    b.Property<int>("ID_HoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_HoaDon"));

                    b.Property<int>("ID_GoiTap")
                        .HasColumnType("int");

                    b.Property<int>("ID_TheHoiVien")
                        .HasColumnType("int");

                    b.Property<int>("ID_User")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoTien")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID_HoaDon");

                    b.HasIndex("ID_GoiTap");

                    b.HasIndex("ID_TheHoiVien");

                    b.HasIndex("ID_User");

                    b.ToTable("HoaDon_ThanhToans");
                });

            modelBuilder.Entity("Gymmi.Models.HoiVien", b =>
                {
                    b.Property<int>("ID_HoiVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_HoiVien"));

                    b.Property<string>("DiaChi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GioiTinh")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ID_User")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayThamGia")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ID_HoiVien");

                    b.HasIndex("ID_User");

                    b.ToTable("HoiViens");
                });

            modelBuilder.Entity("Gymmi.Models.LichTap", b =>
                {
                    b.Property<int>("ID_LichTap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_LichTap"));

                    b.Property<int>("ID_PhongTap")
                        .HasColumnType("int");

                    b.Property<int>("ID_TheHoiVien")
                        .HasColumnType("int");

                    b.Property<int>("ID_User")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("NgayTap")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("ThoiGianTap")
                        .HasColumnType("time");

                    b.HasKey("ID_LichTap");

                    b.HasIndex("ID_PhongTap");

                    b.HasIndex("ID_TheHoiVien");

                    b.HasIndex("ID_User");

                    b.ToTable("LichTaps");
                });

            modelBuilder.Entity("Gymmi.Models.PhanCong", b =>
                {
                    b.Property<int>("ID_PhanCong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_PhanCong"));

                    b.Property<int>("CreatedByAdminID")
                        .HasColumnType("int");

                    b.Property<int>("ID_Ca")
                        .HasColumnType("int");

                    b.Property<int>("ID_PhongTap")
                        .HasColumnType("int");

                    b.Property<int>("ID_User")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("NgayPhanCong")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_PhanCong");

                    b.HasIndex("CreatedByAdminID");

                    b.HasIndex("ID_Ca");

                    b.HasIndex("ID_PhongTap");

                    b.HasIndex("ID_User");

                    b.ToTable("PhanCongs");
                });

            modelBuilder.Entity("Gymmi.Models.PhongTap", b =>
                {
                    b.Property<int>("ID_PhongTap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_PhongTap"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ID_User")
                        .HasColumnType("int");

                    b.Property<int>("SucChua")
                        .HasColumnType("int");

                    b.Property<string>("TenPhong")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ViTri")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID_PhongTap");

                    b.HasIndex("ID_User");

                    b.ToTable("PhongTaps");
                });

            modelBuilder.Entity("Gymmi.Models.QuanLy_NhanVien", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ID_Admin")
                        .HasColumnType("int");

                    b.Property<int>("ID_User")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_Admin");

                    b.HasIndex("ID_User");

                    b.ToTable("QuanLy_NhanViens");
                });

            modelBuilder.Entity("Gymmi.Models.Role", b =>
                {
                    b.Property<int>("ID_Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Role"));

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenRole")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_Role");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID_Role = 1,
                            MoTa = "Quản trị viên hệ thống",
                            TenRole = "Admin"
                        },
                        new
                        {
                            ID_Role = 2,
                            MoTa = "Nhân viên phòng tập",
                            TenRole = "Nhân viên"
                        },
                        new
                        {
                            ID_Role = 3,
                            MoTa = "Thành viên phòng tập",
                            TenRole = "Hội viên"
                        },
                        new
                        {
                            ID_Role = 4,
                            MoTa = "Huấn luyện viên cá nhân",
                            TenRole = "Huấn luyện viên"
                        });
                });

            modelBuilder.Entity("Gymmi.Models.TheHoiVien", b =>
                {
                    b.Property<int>("ID_TheHoiVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_TheHoiVien"));

                    b.Property<int>("ID_GoiTap")
                        .HasColumnType("int");

                    b.Property<int>("ID_HoiVien")
                        .HasColumnType("int");

                    b.Property<int>("ID_User")
                        .HasColumnType("int");

                    b.Property<string>("LoaiTheHoiVien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID_TheHoiVien");

                    b.HasIndex("ID_GoiTap");

                    b.HasIndex("ID_HoiVien");

                    b.HasIndex("ID_User");

                    b.ToTable("TheHoiViens");
                });

            modelBuilder.Entity("Gymmi.Models.ThietBi", b =>
                {
                    b.Property<int>("ID_ThietBi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_ThietBi"));

                    b.Property<DateTime?>("BaoHanh")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Phong")
                        .HasColumnType("int");

                    b.Property<int>("ID_User")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("NgayMua")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenThietBi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("XuatXu")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID_ThietBi");

                    b.HasIndex("ID_Phong");

                    b.HasIndex("ID_User");

                    b.ToTable("ThietBis");
                });

            modelBuilder.Entity("Gymmi.Models.User", b =>
                {
                    b.Property<int>("ID_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_User"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ID_PhanCong")
                        .HasColumnType("int");

                    b.Property<int>("ID_Role")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ID_User");

                    b.HasIndex("ID_PhanCong");

                    b.HasIndex("ID_Role");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Gymmi.Models.BaoCao", b =>
                {
                    b.HasOne("Gymmi.Models.User", "User")
                        .WithMany("BaoCaos")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gymmi.Models.HoaDon_ThanhLy", b =>
                {
                    b.HasOne("Gymmi.Models.ThietBi", "ThietBi")
                        .WithMany("HoaDon_ThanhLys")
                        .HasForeignKey("ID_ThietBi")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gymmi.Models.User", "User")
                        .WithMany("HoaDon_ThanhLys")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ThietBi");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gymmi.Models.HoaDon_ThanhToan", b =>
                {
                    b.HasOne("Gymmi.Models.GoiTap", "GoiTap")
                        .WithMany("HoaDon_ThanhToans")
                        .HasForeignKey("ID_GoiTap")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gymmi.Models.TheHoiVien", "TheHoiVien")
                        .WithMany("HoaDon_ThanhToans")
                        .HasForeignKey("ID_TheHoiVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gymmi.Models.User", "User")
                        .WithMany("HoaDon_ThanhToans")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GoiTap");

                    b.Navigation("TheHoiVien");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gymmi.Models.HoiVien", b =>
                {
                    b.HasOne("Gymmi.Models.User", "User")
                        .WithMany("HoiViens")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gymmi.Models.LichTap", b =>
                {
                    b.HasOne("Gymmi.Models.PhongTap", "PhongTap")
                        .WithMany("LichTaps")
                        .HasForeignKey("ID_PhongTap")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gymmi.Models.TheHoiVien", "TheHoiVien")
                        .WithMany("LichTaps")
                        .HasForeignKey("ID_TheHoiVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymmi.Models.User", "User")
                        .WithMany("LichTaps")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PhongTap");

                    b.Navigation("TheHoiVien");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gymmi.Models.PhanCong", b =>
                {
                    b.HasOne("Gymmi.Models.User", "CreatedByAdmin")
                        .WithMany("CreatedPhanCongs")
                        .HasForeignKey("CreatedByAdminID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gymmi.Models.CaLamViec", "CaLamViec")
                        .WithMany("PhanCongs")
                        .HasForeignKey("ID_Ca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gymmi.Models.PhongTap", "PhongTap")
                        .WithMany("PhanCongs")
                        .HasForeignKey("ID_PhongTap")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gymmi.Models.User", "User")
                        .WithMany("PhanCongs")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CaLamViec");

                    b.Navigation("CreatedByAdmin");

                    b.Navigation("PhongTap");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gymmi.Models.PhongTap", b =>
                {
                    b.HasOne("Gymmi.Models.User", "User")
                        .WithMany("PhongTaps")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gymmi.Models.QuanLy_NhanVien", b =>
                {
                    b.HasOne("Gymmi.Models.User", "Admin")
                        .WithMany()
                        .HasForeignKey("ID_Admin")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gymmi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gymmi.Models.TheHoiVien", b =>
                {
                    b.HasOne("Gymmi.Models.GoiTap", "GoiTap")
                        .WithMany("TheHoiViens")
                        .HasForeignKey("ID_GoiTap")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gymmi.Models.HoiVien", "HoiVien")
                        .WithMany("TheHoiViens")
                        .HasForeignKey("ID_HoiVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gymmi.Models.User", "User")
                        .WithMany("TheHoiViens")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GoiTap");

                    b.Navigation("HoiVien");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gymmi.Models.ThietBi", b =>
                {
                    b.HasOne("Gymmi.Models.PhongTap", "PhongTap")
                        .WithMany("ThietBis")
                        .HasForeignKey("ID_Phong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gymmi.Models.User", "User")
                        .WithMany("ThietBis")
                        .HasForeignKey("ID_User")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PhongTap");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gymmi.Models.User", b =>
                {
                    b.HasOne("Gymmi.Models.PhanCong", "PhanCong")
                        .WithMany("AssignedUsers")
                        .HasForeignKey("ID_PhanCong")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Gymmi.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("ID_Role")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PhanCong");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Gymmi.Models.CaLamViec", b =>
                {
                    b.Navigation("PhanCongs");
                });

            modelBuilder.Entity("Gymmi.Models.GoiTap", b =>
                {
                    b.Navigation("HoaDon_ThanhToans");

                    b.Navigation("TheHoiViens");
                });

            modelBuilder.Entity("Gymmi.Models.HoiVien", b =>
                {
                    b.Navigation("TheHoiViens");
                });

            modelBuilder.Entity("Gymmi.Models.PhanCong", b =>
                {
                    b.Navigation("AssignedUsers");
                });

            modelBuilder.Entity("Gymmi.Models.PhongTap", b =>
                {
                    b.Navigation("LichTaps");

                    b.Navigation("PhanCongs");

                    b.Navigation("ThietBis");
                });

            modelBuilder.Entity("Gymmi.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Gymmi.Models.TheHoiVien", b =>
                {
                    b.Navigation("HoaDon_ThanhToans");

                    b.Navigation("LichTaps");
                });

            modelBuilder.Entity("Gymmi.Models.ThietBi", b =>
                {
                    b.Navigation("HoaDon_ThanhLys");
                });

            modelBuilder.Entity("Gymmi.Models.User", b =>
                {
                    b.Navigation("BaoCaos");

                    b.Navigation("CreatedPhanCongs");

                    b.Navigation("HoaDon_ThanhLys");

                    b.Navigation("HoaDon_ThanhToans");

                    b.Navigation("HoiViens");

                    b.Navigation("LichTaps");

                    b.Navigation("PhanCongs");

                    b.Navigation("PhongTaps");

                    b.Navigation("TheHoiViens");

                    b.Navigation("ThietBis");
                });
#pragma warning restore 612, 618
        }
    }
}
